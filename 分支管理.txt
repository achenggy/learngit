创建分支
	
	git branch dev			创建分支dev
	git checkout dev 		切换到分支dev
	git checkout -b dev     创建并切换到分支dev
	
	git branch 				查看当前分支
	
	git merge dev 			和并分支dev到master
	git branch -d dev  		删除dev分支


解决冲突
	
	git log --graph 		查看分支合并图
	
	
分支管理策略

	--no-ff方式的git merge
	
	git merge --no-ff -m "merge with no-ff" dev     禁用Fast forward合并方法
	
	
Bug分支

	git stash 				把当前工作现场“储藏”起来，等以后恢复现场后继续工作
	git stash list
	git stash apply
	git stash drop
	git stash pop
	
Feature分支

	丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。
	
多人协作

	git remote 				查看远程仓库信息
	git remote -v
	
	git push origin master
	git push origin dev
	
	

    查看远程库信息，使用git remote -v；

    本地新建的分支如果不推送到远程，对其他人就是不可见的；

    从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

    在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

    建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

    从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。
	
Rebase					变基			原本分叉的提交现在变成一条直线

	git log --graph --pretty=oneline --abbrev-commit
	git rebase
	
	
